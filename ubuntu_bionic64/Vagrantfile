
$install_nginx = <<-SCRIPT
  echo '=== Install Nginx ==='
  apt update -y && apt install -y nginx
SCRIPT

$install_mysql_server_57 = <<-SCRIPT
  echo '=== Install Mysql Server 5.7 ==='
  apt update -y && \ 
  apt install -y mysql-server-5.7 && \
  mysql -e "create user 'phpuser'@'%' identified by 'pass';"
SCRIPT

$copy_mysqld_cnf = <<-SCRIPT 
  echo '=== Copying myqsld.cnf ==='
  cat /config/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf && \
  service mysql restart
SCRIPT

$copy_pub_ssh_key = <<-SCRIPT 
  echo '=== Copying pub ssh key ==='
  cat /config/id_bionic.pub >> .ssh/authorized_keys
SCRIPT

Vagrant.configure("2") do |config|
  # define o SO que a vm irá rodar
  config.vm.box = "ubuntu/bionic64"

  # expoe as portas da VM (Guest) para o PC externo (Host). Neste caso expoe a porta do nginx
  config.vm.network "forwarded_port", guest: 80, host: 8089
  # expoe as portas da VM (Guest) para o PC externo (Host). Neste caso expoe a porta do mysql
  config.vm.network "forwarded_port", guest: 3306, host: 33061

  # defiine um ip de rede de forma dinamica
  # config.vm.network "private_network", type: "dhcp"

  # define um ip da rede interna de forma estática
  # config.vm.network "private_network", ip: "192.168.50.4"

  # define uma rede modo bridge para rede publica, por exemplo da empresa, de forma dinamica
  # config.vm.network "public_network"
  # define uma rede modo bridge para rede publica, por exemplo da empresa, de forma estatica (cuidado com conflito)
  config.vm.network "public_network", ip: "192.168.0.57"

  # configurando pasta compartilhada
  config.vm.synced_folder "./config", "/config"

  # desabilitando pasta compartilhada padrao do vagrant
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # provisiona um shell para executar um script dentro da vm
  config.vm.provision "shell", inline: $install_nginx

  # provisiona um shell para executar um script dentro da vm
  config.vm.provision "shell", inline: $install_mysql_server_57

  # provisiona um shell executando um script
  config.vm.provision "shell", inline: $copy_mysqld_cnf

  # provisiona um shell executando um script
  config.vm.provision "shell", inline: $copy_pub_ssh_key
end